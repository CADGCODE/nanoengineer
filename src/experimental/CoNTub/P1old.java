//package nt;

import javax.swing.*;   import java.awt.*;
import java.awt.event.*;import java.applet.*;
import java.text.*;

public class P1 extends JPanel implements ActionListener{
private JButton B1,B2;
private JLabel l1,l2,l3;
private JTextField t1,t2,t3;
private JTextArea texto;
private NTLienzo lienzo;
private JScrollPane textoc;
private JCheckBox cb;
private JPanel c1,c0,c3,c4;
boolean la,ea;
Mira3D pan3Dtubo;


	public P1()	{
	 setLayout(new BorderLayout());
     c0    =new JPanel ();
     c1    =new JPanel ();
     c3	   =new JPanel ();
     c4    =new JPanel ();
     c0.setLayout(new BorderLayout( ));
	 c1.setLayout(new GridLayout(5,5,2,2));
	 c3.setLayout(new BorderLayout( ));
     c4.setLayout(new BorderLayout( ));
     cb    =new JCheckBox("Atom labels");
     lienzo=new NTLienzo();
     texto =new JTextArea("PDB 1 TUBO",6,40);
     textoc=new JScrollPane(texto);
     l1    =new JLabel ("index i");
     l2    =new JLabel ("index j");
     l3    =new JLabel ("length ");
     t1    =new JTextField (" 5");
     t2    =new JTextField (" 5");
     t3    =new JTextField ("10");

     t1.addActionListener(this);
     t2.addActionListener(this);
     t3.addActionListener(this);
     cb.addActionListener(this);
     c1.add(l1);c1.add(t1);c1.add(l2);
     c1.add(t2);c1.add(l3);c1.add(t3);
     c1.add(cb);
     c0.add(c1 ,BorderLayout.NORTH);
     add(c0    ,BorderLayout.WEST );
     pan3Dtubo=new Mira3D();
	 lienzo.setPreferredSize(new Dimension(160,200));
	 c0.add(lienzo,   BorderLayout.CENTER);
     c4.add(pan3Dtubo,BorderLayout.CENTER);


	 add(c4,BorderLayout.CENTER);
	 add(textoc,BorderLayout.SOUTH );
	 lienzo.redraw(5,5);
	 texto.setText("");
	 Font fon=new Font("Courier",1,12);
     texto.setFont(fon);
     texto.setEditable(false);
     textoc.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);

     textoc.setBorder(
		        BorderFactory.createCompoundBorder(BorderFactory.createTitledBorder("PDB"),
		                                           BorderFactory.createEtchedBorder(1)));
     generatubo(5,5,10);

	 }
	 public void actionPerformed(ActionEvent ev){

	 int indi=Integer.parseInt(t1.getText().trim());
	 int indj=Integer.parseInt(t2.getText().trim());
	 int lont=Integer.parseInt(t3.getText().trim());
     lienzo.redraw(indi,indj);
     generatubo(indi,indj,lont);
}

void generatubo(int a,int b,int c){
		 	 formato fi,fd;

		  	 MoleculaT mo=new MoleculaT ();

		 	 Nanotubo NT=new Nanotubo (a,b);
		  	 double x,xc,y,yc,z,zc;
		     for (int i=1;i*NT.deltaz()<=c;i++){  for (int j=1;j<=NT.d();j++){
		  		       x =NT.deltaz()*i;
		  		       xc=NT.deltaz()*i+NT.deltazc();
		  		       y =NT.radio() *(float)Math.sin(NT.deltaphi()*i+               2*(float)Math.PI/NT.d()*j);
		  		       yc=NT.radio() *(float)Math.sin(NT.deltaphi()*i+NT.deltaphic()+2*(float)Math.PI/NT.d()*j);
		  		       z =NT.radio() *(float)Math.cos(NT.deltaphi()*i+               2*(float)Math.PI/NT.d()*j);
		  		       zc=NT.radio() *(float)Math.cos(NT.deltaphi()*i+NT.deltaphic()+2*(float)Math.PI/NT.d()*j);
		                mo.addVert(x,y,z,6);
		                mo.addVert(xc,yc,zc,6);
		                } }


		     mo.centrar();
             mo.ponconec();
             mo.cierraH();
			 mo.ponconec();



 		 	 fd =new formato(8,"###0.000"); //para los doble precision
		  	 fi =new formato(5,"#####");     //para los enteros

		     StringBuffer ct=new StringBuffer("AUTHOR File generated by Contub 1.0 March 2003 \n");
		     for (int i=0;i<mo.nvert();i++)
		 	    	ct.append("HETATM"+fi.aCadena(i)+ " "+
						   mo.etiq(i)+"       "+
		 	    	                   fi.aCadena(i)+"    "+
		 	    	                   fd.aCadena(mo.vert(i).x)+
		 	    	                   fd.aCadena(mo.vert(i).y)+
		 	    	                   fd.aCadena(mo.vert(i).z)+"\n");
 		 	 for (int i=0;i<mo.nvert();i++) //CONECTIVIDAD
		 		  	{ct.append("CONECT"+fi.aCadena(i));
					 int mc[]=((Atomo)mo.susatomos.get(i)).mconec;
		 		  	 for (int j=1;j<=mc[0];j++)
		 		  	       ct.append(fi.aCadena(mc[j]));
		 		  	 ct.append("\n");
		 		      }

		 		 	 ct.append("END");

		 	 texto.setText(ct+" ");

		 	 pan3Dtubo.cargarMol(mo);
		 	 pan3Dtubo.repaint();


		 }
public void itemStateChanged(ItemEvent e) {
     Object source = e.getItemSelectable();
     if      (source == cb) {
	       if   (e.getStateChange() == ItemEvent.DESELECTED) {this.la=false;}
           else {                                             this.la=true ;}
     pan3Dtubo.repinta(false,la);  }

  }
}
